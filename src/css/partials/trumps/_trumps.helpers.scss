.block {
    display: block !important;
}

/**
 * Add/remove floats:
 * Helper float classes.
 *
 * - `.float--right` - float right
 * - `.float--left` - float left
 * - `.float--none` - remove float
 */
.float--right   { float:right!important; }
.float--left    { float:left !important; }
.float--none    { float:none !important; }


/**
 * Text alignment:
 * Helper text alignment classes.
 *
 * - `.text--left` - align text left
 * - `.text--center` - center align text
 * - `.text--right` - align text right
 */
.text--left     { text-align:left  !important; }
.text--center   { text-align:center!important; }
.text--right    { text-align:right !important; }


/**
 * Font weights:
 * Helper font weight classes.
 *
 * - `.weight--light` - font weight of 200
 * - `.weight--normal` - font weight of 400
 * - `.weight--semibold` - font weight of 600
 * - `.weight--bold` - font weight of 800
 */
.weight--light      { font-weight:200!important; }
.weight--normal     { font-weight:400!important; }
.weight--semibold   { font-weight:600!important; }
.weight--bold       { font-weight:800!important; }

/**
 * Information cursor:
 * Helper to add information cursor to element.
 *
 * - `.informative` - add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
.informative{
    cursor:help!important;
}

/**
 * Muted element:
 * Mute an object by reducing its opacity.
 *
 * - `.muted` - mute an object.
 */
.muted{
    opacity:0.5!important;
    filter:alpha(opacity = 50)!important;
}

/**
 * Capital case:
 * Apply capital case to an element (usually a `strong`).
 *
 * - `.caps` - apply caps
 */
.caps{
    text-transform:uppercase!important;
}

/**
 * Smaller text:
 * Make text size smaller.
 *
 * - `.small` - make text size smaller
 */
.small {
    font-size: .9em !important;
}

/**
 * Foreground colors:
 * Apply specific color.
 *
 * - `.color--brand` - brand colour
 * - `.color--text` - main text colour
 * - `.color--white` - white colour
 * - `.color--black` - black colour
 */
.color--brand,
.color--brand:hover {
    color: $color--brand !important;
}
.color--text {
    color: $inuit-base-text-color !important;
}
.color--white {
    color: $color--white !important;
}
.color--black {
    color: $color--black !important;
}

/**
 * Background colors:
 * Apply specific color to background.
 *
 * - `.bg--brand` - brand colour
 * - `.bg--text` - main text colour
 * - `.bg--white` - white colour
 * - `.bg--black` - black colour
 * - `.bg--grey` - grey colour
 * - `.bg--grey-dark` - dark grey colour
 * - `.bg--grey-light` - light grey colour
 */
.bg--brand {
    background-color: $color--brand !important;
}
.bg--text {
    background-color: $inuit-base-text-color !important;
}
.bg--white {
    background-color: $color--white !important;
}
.bg--black {
    background-color: $color--black !important;
}
.bg--grey {
    background-color: $color--grey !important;
}
.bg--grey-dark {
    background-color: $color--grey-dark !important;
}
.bg--grey-light {
    background-color: $color--grey-light !important;
}


/**
 * Circle:
 * Create circle
 *
 * - `.circled` - circle in.
 */
.circled {
    border-radius: 50%;
}


/**
 * Hide text:
 * Hide text inside element
 *
 * - `.text--hidden` - hide text
 */
.text--hidden {
    overflow: hidden;
    text-indent: -9999px;
    white-space: nowrap;
}


/**
 * Accessibility-friendly hide:
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 *
 * - `.accessibility`
 * - `.hidden`
 */
@mixin accessibility{
    border:0!important;
    clip:rect(0 0 0 0)!important;
    height:1px!important;
    margin:-1px!important;
    overflow:hidden!important;
    padding:0!important;
    position: absolute!important;
    width:1px!important;
}
.accessibility,
.hidden {
    @include accessibility;
}
@each $state in palm, lap, lap-and-up, portable, desk {
    @include media-query(#{$state}){
        .#{$state}--accessibility,
        .#{$state}--hidden{
            @include accessibility;
        }
    }
}